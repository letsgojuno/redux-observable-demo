{
  "errors": [],
  "warnings": [],
  "version": "2.1.0-beta.21",
  "hash": "7c2cb6fbc8f4e6541b18",
  "time": 939,
  "publicPath": "",
  "assetsByChunkName": {
    "main": "webpack.bundle.js"
  },
  "assets": [
    {
      "name": "webpack.bundle.js",
      "size": 154223,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    }
  ],
  "entrypoints": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "webpack.bundle.js"
      ]
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "extraAsync": false,
      "size": 146463,
      "names": [
        "main"
      ],
      "files": [
        "webpack.bundle.js"
      ],
      "hash": "ff4448b930c84676dcfb",
      "parents": [],
      "modules": [
        {
          "id": 0,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "name": "./~/rxjs/Observable.js",
          "index": 1,
          "index2": 15,
          "size": 6035,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 15,
            "building": 17
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "5:19-43"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./Observable",
              "loc": "7:19-42"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/EmptyObservable.js",
              "module": "./~/rxjs/observable/EmptyObservable.js",
              "moduleName": "./~/rxjs/observable/EmptyObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "7:19-43"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ScalarObservable.js",
              "module": "./~/rxjs/observable/ScalarObservable.js",
              "moduleName": "./~/rxjs/observable/ScalarObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "7:19-43"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
              "module": "./~/rxjs/add/observable/interval.js",
              "moduleName": "./~/rxjs/add/observable/interval.js",
              "type": "cjs require",
              "userRequest": "../../Observable",
              "loc": "2:19-46"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
              "module": "./~/rxjs/add/operator/mapTo.js",
              "moduleName": "./~/rxjs/add/operator/mapTo.js",
              "type": "cjs require",
              "userRequest": "../../Observable",
              "loc": "2:19-46"
            },
            {
              "moduleId": 26,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
              "module": "./~/rxjs/add/operator/mergeMap.js",
              "moduleName": "./~/rxjs/add/operator/mergeMap.js",
              "type": "cjs require",
              "userRequest": "../../Observable",
              "loc": "2:19-46"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
              "module": "./~/rxjs/add/operator/takeUntil.js",
              "moduleName": "./~/rxjs/add/operator/takeUntil.js",
              "type": "cjs require",
              "userRequest": "../../Observable",
              "loc": "2:19-46"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
              "module": "./~/redux-observable/lib/ActionsObservable.js",
              "moduleName": "./~/redux-observable/lib/ActionsObservable.js",
              "type": "cjs require",
              "userRequest": "rxjs/Observable",
              "loc": "10:19-45"
            },
            {
              "moduleId": 39,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Notification.js",
              "module": "./~/rxjs/Notification.js",
              "moduleName": "./~/rxjs/Notification.js",
              "type": "cjs require",
              "userRequest": "./Observable",
              "loc": "2:19-42"
            },
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
              "module": "./~/rxjs/observable/ArrayLikeObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "7:19-43"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
              "module": "./~/rxjs/observable/ArrayObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "7:19-43"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "14:19-43"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
              "module": "./~/rxjs/observable/IntervalObservable.js",
              "moduleName": "./~/rxjs/observable/IntervalObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "8:19-43"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
              "module": "./~/rxjs/observable/IteratorObservable.js",
              "moduleName": "./~/rxjs/observable/IteratorObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "8:19-43"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
              "module": "./~/rxjs/observable/PromiseObservable.js",
              "moduleName": "./~/rxjs/observable/PromiseObservable.js",
              "type": "cjs require",
              "userRequest": "../Observable",
              "loc": "8:19-43"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "rxjs/Observable",
              "loc": "3:18-44"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map"
        },
        {
          "id": 1,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
          "name": "./~/rxjs/util/root.js",
          "index": 2,
          "index2": 2,
          "size": 686,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "issuerId": 0,
          "issuerName": "./~/rxjs/Observable.js",
          "profile": {
            "factory": 35,
            "building": 39
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
              "module": "./~/rxjs/Observable.js",
              "moduleName": "./~/rxjs/Observable.js",
              "type": "cjs require",
              "userRequest": "./util/root",
              "loc": "2:13-35"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/iterator.js",
              "module": "./~/rxjs/symbol/iterator.js",
              "moduleName": "./~/rxjs/symbol/iterator.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "2:13-36"
            },
            {
              "moduleId": 7,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/observable.js",
              "module": "./~/rxjs/symbol/observable.js",
              "moduleName": "./~/rxjs/symbol/observable.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "2:13-36"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/rxSubscriber.js",
              "module": "./~/rxjs/symbol/rxSubscriber.js",
              "moduleName": "./~/rxjs/symbol/rxSubscriber.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "2:13-36"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "./root",
              "loc": "2:13-30"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
              "module": "./~/rxjs/observable/IteratorObservable.js",
              "moduleName": "./~/rxjs/observable/IteratorObservable.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "7:13-36"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
              "module": "./~/rxjs/observable/PromiseObservable.js",
              "moduleName": "./~/rxjs/observable/PromiseObservable.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "7:13-36"
            },
            {
              "moduleId": 58,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
              "module": "./~/rxjs/scheduler/AsyncAction.js",
              "moduleName": "./~/rxjs/scheduler/AsyncAction.js",
              "type": "cjs require",
              "userRequest": "../util/root",
              "loc": "7:13-36"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n/* tslint:disable:no-unused-variable */\nvar freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\nvar freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map"
        },
        {
          "id": 2,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "name": "./~/rxjs/Subscriber.js",
          "index": 6,
          "index2": 12,
          "size": 8870,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "issuerId": 14,
          "issuerName": "./~/rxjs/Subject.js",
          "profile": {
            "factory": 39,
            "building": 34,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/OuterSubscriber.js",
              "module": "./~/rxjs/OuterSubscriber.js",
              "moduleName": "./~/rxjs/OuterSubscriber.js",
              "type": "cjs require",
              "userRequest": "./Subscriber",
              "loc": "7:19-42"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./Subscriber",
              "loc": "8:19-42"
            },
            {
              "moduleId": 38,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/InnerSubscriber.js",
              "module": "./~/rxjs/InnerSubscriber.js",
              "moduleName": "./~/rxjs/InnerSubscriber.js",
              "type": "cjs require",
              "userRequest": "./Subscriber",
              "loc": "7:19-42"
            },
            {
              "moduleId": 51,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/filter.js",
              "module": "./~/rxjs/operator/filter.js",
              "moduleName": "./~/rxjs/operator/filter.js",
              "type": "cjs require",
              "userRequest": "../Subscriber",
              "loc": "7:19-43"
            },
            {
              "moduleId": 52,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mapTo.js",
              "module": "./~/rxjs/operator/mapTo.js",
              "moduleName": "./~/rxjs/operator/mapTo.js",
              "type": "cjs require",
              "userRequest": "../Subscriber",
              "loc": "7:19-43"
            },
            {
              "moduleId": 54,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
              "module": "./~/rxjs/operator/observeOn.js",
              "moduleName": "./~/rxjs/operator/observeOn.js",
              "type": "cjs require",
              "userRequest": "../Subscriber",
              "loc": "7:19-43"
            },
            {
              "moduleId": 65,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
              "module": "./~/rxjs/util/toSubscriber.js",
              "moduleName": "./~/rxjs/util/toSubscriber.js",
              "type": "cjs require",
              "userRequest": "../Subscriber",
              "loc": "2:19-43"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map"
        },
        {
          "id": 3,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "name": "./~/rxjs/Subscription.js",
          "index": 8,
          "index2": 9,
          "size": 5992,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "issuerId": 14,
          "issuerName": "./~/rxjs/Subject.js",
          "profile": {
            "factory": 39,
            "building": 40,
            "dependencies": 44
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
              "module": "./~/rxjs/Subscriber.js",
              "moduleName": "./~/rxjs/Subscriber.js",
              "type": "cjs require",
              "userRequest": "./Subscription",
              "loc": "8:21-46"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./Subscription",
              "loc": "9:21-46"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/SubjectSubscription.js",
              "module": "./~/rxjs/SubjectSubscription.js",
              "moduleName": "./~/rxjs/SubjectSubscription.js",
              "type": "cjs require",
              "userRequest": "./Subscription",
              "loc": "7:21-46"
            },
            {
              "moduleId": 57,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/Action.js",
              "module": "./~/rxjs/scheduler/Action.js",
              "moduleName": "./~/rxjs/scheduler/Action.js",
              "type": "cjs require",
              "userRequest": "../Subscription",
              "loc": "7:21-47"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map"
        },
        {
          "id": 4,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isArray.js",
          "name": "./~/rxjs/util/isArray.js",
          "index": 9,
          "index2": 4,
          "size": 146,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "issuerId": 3,
          "issuerName": "./~/rxjs/Subscription.js",
          "profile": {
            "factory": 44,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/isArray",
              "loc": "2:16-41"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "./isArray",
              "loc": "3:16-36"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../util/isArray",
              "loc": "7:16-42"
            },
            {
              "moduleId": 62,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isNumeric.js",
              "module": "./~/rxjs/util/isNumeric.js",
              "moduleName": "./~/rxjs/util/isNumeric.js",
              "type": "cjs require",
              "userRequest": "../util/isArray",
              "loc": "2:16-42"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map"
        },
        {
          "id": 5,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/OuterSubscriber.js",
          "name": "./~/rxjs/OuterSubscriber.js",
          "index": 32,
          "index2": 29,
          "size": 1107,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
          "issuerId": 53,
          "issuerName": "./~/rxjs/operator/mergeMap.js",
          "profile": {
            "factory": 45,
            "building": 47,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 53,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
              "module": "./~/rxjs/operator/mergeMap.js",
              "moduleName": "./~/rxjs/operator/mergeMap.js",
              "type": "cjs require",
              "userRequest": "../OuterSubscriber",
              "loc": "8:24-53"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
              "module": "./~/rxjs/operator/switchMap.js",
              "moduleName": "./~/rxjs/operator/switchMap.js",
              "type": "cjs require",
              "userRequest": "../OuterSubscriber",
              "loc": "7:24-53"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
              "module": "./~/rxjs/operator/takeUntil.js",
              "moduleName": "./~/rxjs/operator/takeUntil.js",
              "type": "cjs require",
              "userRequest": "../OuterSubscriber",
              "loc": "7:24-53"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map"
        },
        {
          "id": 6,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/iterator.js",
          "name": "./~/rxjs/symbol/iterator.js",
          "index": 30,
          "index2": 26,
          "size": 1032,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 25,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "../symbol/iterator",
              "loc": "6:17-46"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../symbol/iterator",
              "loc": "13:17-46"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
              "module": "./~/rxjs/observable/IteratorObservable.js",
              "moduleName": "./~/rxjs/observable/IteratorObservable.js",
              "type": "cjs require",
              "userRequest": "../symbol/iterator",
              "loc": "9:17-46"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nif (typeof Symbol === 'function') {\n    if (Symbol.iterator) {\n        exports.$$iterator = Symbol.iterator;\n    }\n    else if (typeof Symbol.for === 'function') {\n        exports.$$iterator = Symbol.for('iterator');\n    }\n}\nelse {\n    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {\n        // Bug for mozilla version\n        exports.$$iterator = '@@iterator';\n    }\n    else if (root_1.root.Map) {\n        // es6-shim specific logic\n        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {\n                exports.$$iterator = key;\n                break;\n            }\n        }\n    }\n    else {\n        exports.$$iterator = '@@iterator';\n    }\n}\n//# sourceMappingURL=iterator.js.map"
        },
        {
          "id": 7,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/observable.js",
          "name": "./~/rxjs/symbol/observable.js",
          "index": 16,
          "index2": 14,
          "size": 631,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "issuerId": 0,
          "issuerName": "./~/rxjs/Observable.js",
          "profile": {
            "factory": 35,
            "building": 41,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
              "module": "./~/rxjs/Observable.js",
              "moduleName": "./~/rxjs/Observable.js",
              "type": "cjs require",
              "userRequest": "./symbol/observable",
              "loc": "4:19-49"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "../symbol/observable",
              "loc": "8:19-50"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../symbol/observable",
              "loc": "16:19-50"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map"
        },
        {
          "id": 8,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/rxSubscriber.js",
          "name": "./~/rxjs/symbol/rxSubscriber.js",
          "index": 15,
          "index2": 11,
          "size": 270,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "issuerId": 14,
          "issuerName": "./~/rxjs/Subject.js",
          "profile": {
            "factory": 40,
            "building": 60,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
              "module": "./~/rxjs/Subscriber.js",
              "moduleName": "./~/rxjs/Subscriber.js",
              "type": "cjs require",
              "userRequest": "./symbol/rxSubscriber",
              "loc": "10:21-53"
            },
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./symbol/rxSubscriber",
              "loc": "12:21-53"
            },
            {
              "moduleId": 65,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
              "module": "./~/rxjs/util/toSubscriber.js",
              "moduleName": "./~/rxjs/util/toSubscriber.js",
              "type": "cjs require",
              "userRequest": "../symbol/rxSubscriber",
              "loc": "3:21-54"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map"
        },
        {
          "id": 9,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "name": "./~/rxjs/util/subscribeToResult.js",
          "index": 28,
          "index2": 28,
          "size": 2631,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
          "issuerId": 53,
          "issuerName": "./~/rxjs/operator/mergeMap.js",
          "profile": {
            "factory": 44,
            "building": 50,
            "dependencies": 16
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 53,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
              "module": "./~/rxjs/operator/mergeMap.js",
              "moduleName": "./~/rxjs/operator/mergeMap.js",
              "type": "cjs require",
              "userRequest": "../util/subscribeToResult",
              "loc": "7:26-62"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
              "module": "./~/rxjs/operator/switchMap.js",
              "moduleName": "./~/rxjs/operator/switchMap.js",
              "type": "cjs require",
              "userRequest": "../util/subscribeToResult",
              "loc": "8:26-62"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
              "module": "./~/rxjs/operator/takeUntil.js",
              "moduleName": "./~/rxjs/operator/takeUntil.js",
              "type": "cjs require",
              "userRequest": "../util/subscribeToResult",
              "loc": "8:26-62"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar root_1 = require('./root');\nvar isArray_1 = require('./isArray');\nvar isPromise_1 = require('./isPromise');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    if (isArray_1.isArray(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (typeof result[iterator_1.$$iterator] === 'function') {\n        var iterator = result[iterator_1.$$iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (typeof result[observable_1.$$observable] === 'function') {\n        var obs = result[observable_1.$$observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new Error('invalid observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        destination.error(new TypeError('unknown type returned'));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map"
        },
        {
          "id": 10,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "name": "./~/lodash/isPlainObject.js",
          "index": 39,
          "index2": 40,
          "size": 1877,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
          "issuerId": 36,
          "issuerName": "./~/redux/lib/combineReducers.js",
          "profile": {
            "factory": 75,
            "building": 9
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
              "module": "./~/redux/lib/createStore.js",
              "moduleName": "./~/redux/lib/createStore.js",
              "type": "cjs require",
              "userRequest": "lodash/isPlainObject",
              "loc": "7:21-52"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
              "module": "./~/redux/lib/combineReducers.js",
              "moduleName": "./~/redux/lib/combineReducers.js",
              "type": "cjs require",
              "userRequest": "lodash/isPlainObject",
              "loc": "8:21-52"
            }
          ],
          "usedExports": true,
          "source": "var getPrototype = require('./_getPrototype'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n"
        },
        {
          "id": 11,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/compose.js",
          "name": "./~/redux/lib/compose.js",
          "index": 50,
          "index2": 47,
          "size": 1124,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 15,
            "building": 86
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./compose",
              "loc": "22:15-35"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/applyMiddleware.js",
              "module": "./~/redux/lib/applyMiddleware.js",
              "moduleName": "./~/redux/lib/applyMiddleware.js",
              "type": "cjs require",
              "userRequest": "./compose",
              "loc": "9:15-35"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}"
        },
        {
          "id": 12,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
          "name": "./~/redux/lib/createStore.js",
          "index": 38,
          "index2": 43,
          "size": 9185,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 14,
            "building": 83,
            "dependencies": 69
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./createStore",
              "loc": "6:19-43"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
              "module": "./~/redux/lib/combineReducers.js",
              "moduleName": "./~/redux/lib/combineReducers.js",
              "type": "cjs require",
              "userRequest": "./createStore",
              "loc": "6:19-43"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}"
        },
        {
          "id": 13,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/utils/warning.js",
          "name": "./~/redux/lib/utils/warning.js",
          "index": 47,
          "index2": 44,
          "size": 694,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 16,
            "building": 88
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./utils/warning",
              "loc": "26:15-41"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
              "module": "./~/redux/lib/combineReducers.js",
              "moduleName": "./~/redux/lib/combineReducers.js",
              "type": "cjs require",
              "userRequest": "./utils/warning",
              "loc": "12:15-41"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}"
        },
        {
          "id": 14,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "name": "./~/rxjs/Subject.js",
          "index": 52,
          "index2": 52,
          "size": 5335,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 9,
            "building": 46,
            "dependencies": 38
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "rxjs/Subject",
              "loc": "8:15-38"
            },
            {
              "moduleId": 37,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
              "module": "./~/rxjs/BehaviorSubject.js",
              "moduleName": "./~/rxjs/BehaviorSubject.js",
              "type": "cjs require",
              "userRequest": "./Subject",
              "loc": "7:16-36"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map"
        },
        {
          "id": 15,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/EmptyObservable.js",
          "name": "./~/rxjs/observable/EmptyObservable.js",
          "index": 62,
          "index2": 57,
          "size": 2708,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "issuerId": 44,
          "issuerName": "./~/rxjs/observable/ArrayObservable.js",
          "profile": {
            "factory": 21,
            "building": 5,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
              "module": "./~/rxjs/observable/ArrayLikeObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
              "type": "cjs require",
              "userRequest": "./EmptyObservable",
              "loc": "9:24-52"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
              "module": "./~/rxjs/observable/ArrayObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayObservable.js",
              "type": "cjs require",
              "userRequest": "./EmptyObservable",
              "loc": "9:24-52"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map"
        },
        {
          "id": 16,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ScalarObservable.js",
          "name": "./~/rxjs/observable/ScalarObservable.js",
          "index": 61,
          "index2": 56,
          "size": 1879,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "issuerId": 44,
          "issuerName": "./~/rxjs/observable/ArrayObservable.js",
          "profile": {
            "factory": 20,
            "building": 7,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 43,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
              "module": "./~/rxjs/observable/ArrayLikeObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
              "type": "cjs require",
              "userRequest": "./ScalarObservable",
              "loc": "8:25-54"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
              "module": "./~/rxjs/observable/ArrayObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayObservable.js",
              "type": "cjs require",
              "userRequest": "./ScalarObservable",
              "loc": "8:25-54"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map"
        },
        {
          "id": 17,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/ObjectUnsubscribedError.js",
          "name": "./~/rxjs/util/ObjectUnsubscribedError.js",
          "index": 53,
          "index2": 50,
          "size": 955,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
          "issuerId": 37,
          "issuerName": "./~/rxjs/BehaviorSubject.js",
          "profile": {
            "factory": 47,
            "building": 28
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./util/ObjectUnsubscribedError",
              "loc": "10:32-73"
            },
            {
              "moduleId": 37,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
              "module": "./~/rxjs/BehaviorSubject.js",
              "moduleName": "./~/rxjs/BehaviorSubject.js",
              "type": "cjs require",
              "userRequest": "./util/ObjectUnsubscribedError",
              "loc": "8:32-73"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map"
        },
        {
          "id": 18,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/errorObject.js",
          "name": "./~/rxjs/util/errorObject.js",
          "index": 12,
          "index2": 6,
          "size": 177,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "issuerId": 3,
          "issuerName": "./~/rxjs/Subscription.js",
          "profile": {
            "factory": 46,
            "building": 9
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/errorObject",
              "loc": "6:20-49"
            },
            {
              "moduleId": 66,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/tryCatch.js",
              "module": "./~/rxjs/util/tryCatch.js",
              "moduleName": "./~/rxjs/util/tryCatch.js",
              "type": "cjs require",
              "userRequest": "./errorObject",
              "loc": "2:20-44"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map"
        },
        {
          "id": 19,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isFunction.js",
          "name": "./~/rxjs/util/isFunction.js",
          "index": 7,
          "index2": 3,
          "size": 148,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "issuerId": 2,
          "issuerName": "./~/rxjs/Subscriber.js",
          "profile": {
            "factory": 50,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
              "module": "./~/rxjs/Subscriber.js",
              "moduleName": "./~/rxjs/Subscriber.js",
              "type": "cjs require",
              "userRequest": "./util/isFunction",
              "loc": "7:19-47"
            },
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/isFunction",
              "loc": "4:19-47"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map"
        },
        {
          "id": 20,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isPromise.js",
          "name": "./~/rxjs/util/isPromise.js",
          "index": 29,
          "index2": 25,
          "size": 207,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 23,
            "building": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "./isPromise",
              "loc": "4:18-40"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../util/isPromise",
              "loc": "8:18-46"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map"
        },
        {
          "id": 21,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 4,
          "index2": 1,
          "size": 506,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
          "issuerId": 1,
          "issuerName": "./~/rxjs/util/root.js",
          "profile": {
            "factory": 113,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
              "module": "./~/rxjs/util/root.js",
              "moduleName": "./~/rxjs/util/root.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-95"
            },
            {
              "moduleId": 67,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
              "module": "./~/symbol-observable/index.js",
              "moduleName": "./~/symbol-observable/index.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-95"
            }
          ],
          "usedExports": true,
          "source": "var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"
        },
        {
          "id": 22,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "name": "./~/redux-observable/lib/createEpicMiddleware.js",
          "index": 51,
          "index2": 69,
          "size": 2196,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 18,
            "building": 24
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "redux-observable/lib/createEpicMiddleware",
              "loc": "15:28-80"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEpicMiddleware = createEpicMiddleware;\n\nvar _Subject = require('rxjs/Subject');\n\nvar _BehaviorSubject = require('rxjs/BehaviorSubject');\n\nvar _from = require('rxjs/observable/from');\n\nvar _switchMap = require('rxjs/operator/switchMap');\n\nvar _ActionsObservable = require('./ActionsObservable');\n\nvar _EPIC_END = require('./EPIC_END');\n\nvar defaultAdapter = {\n  input: function input(action$) {\n    return action$;\n  },\n  output: function output(action$) {\n    return action$;\n  }\n};\n\nvar defaultOptions = {\n  adapter: defaultAdapter\n};\n\nfunction createEpicMiddleware(epic) {\n  var _ref = arguments.length <= 1 || arguments[1] === undefined ? defaultOptions : arguments[1];\n\n  var _ref$adapter = _ref.adapter;\n  var adapter = _ref$adapter === undefined ? defaultAdapter : _ref$adapter;\n\n  var input$ = new _Subject.Subject();\n  var action$ = adapter.input(new _ActionsObservable.ActionsObservable(input$));\n  var epic$ = new _BehaviorSubject.BehaviorSubject(epic);\n  var store = void 0;\n\n  var epicMiddleware = function epicMiddleware(_store) {\n    store = _store;\n\n    return function (next) {\n      if (typeof epic === 'function') {\n        _switchMap.switchMap.call(epic$, function (epic) {\n          return adapter.output(epic(action$, store));\n        }).subscribe(store.dispatch);\n      }\n\n      return function (action) {\n        if (typeof action === 'function') {\n          if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {\n            console.warn('DEPRECATION: Using thunkservables with redux-observable is now deprecated in favor of the new \"Epics\" feature. See http://redux-observable.js.org/docs/FAQ.html#why-were-thunkservables-deprecated');\n          }\n\n          var out$ = (0, _from.from)(action(action$, store));\n          return out$.subscribe(store.dispatch);\n        } else {\n          var result = next(action);\n          input$.next(action);\n          return result;\n        }\n      };\n    };\n  };\n\n  epicMiddleware.replaceEpic = function (epic) {\n    store.dispatch({ type: _EPIC_END.EPIC_END });\n    epic$.next(epic);\n  };\n\n  return epicMiddleware;\n}"
        },
        {
          "id": 23,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "name": "./~/redux/lib/index.js",
          "index": 37,
          "index2": 49,
          "size": 1941,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 20,
            "building": 38
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "redux",
              "loc": "13:13-29"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];"
        },
        {
          "id": 24,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
          "name": "./~/rxjs/add/observable/interval.js",
          "index": 17,
          "index2": 24,
          "size": 209,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 16,
            "building": 6,
            "dependencies": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "rxjs/add/observable/interval",
              "loc": "5:0-39"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map"
        },
        {
          "id": 25,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
          "name": "./~/rxjs/add/operator/mapTo.js",
          "index": 33,
          "index2": 33,
          "size": 199,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 17,
            "building": 20,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "rxjs/add/operator/mapTo",
              "loc": "9:0-34"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mapTo_1 = require('../../operator/mapTo');\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map"
        },
        {
          "id": 26,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
          "name": "./~/rxjs/add/operator/mergeMap.js",
          "index": 26,
          "index2": 31,
          "size": 282,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 17,
            "building": 17,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "rxjs/add/operator/mergeMap",
              "loc": "7:0-37"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map"
        },
        {
          "id": 27,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
          "name": "./~/rxjs/add/operator/takeUntil.js",
          "index": 35,
          "index2": 35,
          "size": 223,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "issuerId": 70,
          "issuerName": "./src/index.js",
          "profile": {
            "factory": 18,
            "building": 20,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "cjs require",
              "userRequest": "rxjs/add/operator/takeUntil",
              "loc": "11:0-38"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeUntil_1 = require('../../operator/takeUntil');\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map"
        },
        {
          "id": 28,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
          "name": "./~/lodash/_getPrototype.js",
          "index": 40,
          "index2": 37,
          "size": 163,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "issuerId": 10,
          "issuerName": "./~/lodash/isPlainObject.js",
          "profile": {
            "factory": 25,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
              "module": "./~/lodash/isPlainObject.js",
              "moduleName": "./~/lodash/isPlainObject.js",
              "type": "cjs require",
              "userRequest": "./_getPrototype",
              "loc": "1:19-45"
            }
          ],
          "usedExports": true,
          "source": "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n"
        },
        {
          "id": 29,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_isHostObject.js",
          "name": "./~/lodash/_isHostObject.js",
          "index": 42,
          "index2": 38,
          "size": 552,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "issuerId": 10,
          "issuerName": "./~/lodash/isPlainObject.js",
          "profile": {
            "factory": 26,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
              "module": "./~/lodash/isPlainObject.js",
              "moduleName": "./~/lodash/isPlainObject.js",
              "type": "cjs require",
              "userRequest": "./_isHostObject",
              "loc": "2:19-45"
            }
          ],
          "usedExports": true,
          "source": "/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n"
        },
        {
          "id": 30,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_overArg.js",
          "name": "./~/lodash/_overArg.js",
          "index": 41,
          "index2": 36,
          "size": 382,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
          "issuerId": 28,
          "issuerName": "./~/lodash/_getPrototype.js",
          "profile": {
            "factory": 12,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
              "module": "./~/lodash/_getPrototype.js",
              "moduleName": "./~/lodash/_getPrototype.js",
              "type": "cjs require",
              "userRequest": "./_overArg",
              "loc": "1:14-35"
            }
          ],
          "usedExports": true,
          "source": "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n"
        },
        {
          "id": 31,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isObjectLike.js",
          "name": "./~/lodash/isObjectLike.js",
          "index": 43,
          "index2": 39,
          "size": 608,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "issuerId": 10,
          "issuerName": "./~/lodash/isPlainObject.js",
          "profile": {
            "factory": 26,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 10,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
              "module": "./~/lodash/isPlainObject.js",
              "moduleName": "./~/lodash/isPlainObject.js",
              "type": "cjs require",
              "userRequest": "./isObjectLike",
              "loc": "3:19-44"
            }
          ],
          "usedExports": true,
          "source": "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n"
        },
        {
          "id": 32,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
          "name": "./~/redux-observable/lib/ActionsObservable.js",
          "index": 68,
          "index2": 67,
          "size": 2901,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 10,
            "building": 32,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "./ActionsObservable",
              "loc": "16:25-55"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionsObservable = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Observable2 = require('rxjs/Observable');\n\nvar _filter = require('rxjs/operator/filter');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ActionsObservable = exports.ActionsObservable = function (_Observable) {\n  _inherits(ActionsObservable, _Observable);\n\n  function ActionsObservable(actionsSubject) {\n    _classCallCheck(this, ActionsObservable);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ActionsObservable).call(this));\n\n    _this.source = actionsSubject;\n    return _this;\n  }\n\n  _createClass(ActionsObservable, [{\n    key: 'lift',\n    value: function lift(operator) {\n      var observable = new ActionsObservable(this);\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: 'ofType',\n    value: function ofType() {\n      for (var _len = arguments.length, keys = Array(_len), _key = 0; _key < _len; _key++) {\n        keys[_key] = arguments[_key];\n      }\n\n      return _filter.filter.call(this, function (_ref) {\n        var type = _ref.type;\n\n        var len = keys.length;\n        if (len === 1) {\n          return type === keys[0];\n        } else {\n          for (var i = 0; i < len; i++) {\n            if (keys[i] === type) {\n              return true;\n            }\n          }\n        }\n        return false;\n      });\n    }\n  }]);\n\n  return ActionsObservable;\n}(_Observable2.Observable);"
        },
        {
          "id": 33,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/EPIC_END.js",
          "name": "./~/redux-observable/lib/EPIC_END.js",
          "index": 70,
          "index2": 68,
          "size": 144,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 11,
            "building": 37
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "./EPIC_END",
              "loc": "18:16-37"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EPIC_END = exports.EPIC_END = '@@redux-observable/EPIC_END';"
        },
        {
          "id": 34,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/applyMiddleware.js",
          "name": "./~/redux/lib/applyMiddleware.js",
          "index": 49,
          "index2": 48,
          "size": 2035,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 15,
            "building": 66,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./applyMiddleware",
              "loc": "18:23-51"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}"
        },
        {
          "id": 35,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/bindActionCreators.js",
          "name": "./~/redux/lib/bindActionCreators.js",
          "index": 48,
          "index2": 46,
          "size": 2043,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 14,
            "building": 86
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./bindActionCreators",
              "loc": "14:26-57"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}"
        },
        {
          "id": 36,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
          "name": "./~/redux/lib/combineReducers.js",
          "index": 46,
          "index2": 45,
          "size": 5525,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "issuerId": 23,
          "issuerName": "./~/redux/lib/index.js",
          "profile": {
            "factory": 14,
            "building": 76,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
              "module": "./~/redux/lib/index.js",
              "moduleName": "./~/redux/lib/index.js",
              "type": "cjs require",
              "userRequest": "./combineReducers",
              "loc": "10:23-51"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}"
        },
        {
          "id": 37,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
          "name": "./~/rxjs/BehaviorSubject.js",
          "index": 55,
          "index2": 53,
          "size": 1666,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 10,
            "building": 36,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "rxjs/BehaviorSubject",
              "loc": "10:23-54"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map"
        },
        {
          "id": 38,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/InnerSubscriber.js",
          "name": "./~/rxjs/InnerSubscriber.js",
          "index": 31,
          "index2": 27,
          "size": 1289,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "issuerId": 9,
          "issuerName": "./~/rxjs/util/subscribeToResult.js",
          "profile": {
            "factory": 16,
            "building": 24,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
              "module": "./~/rxjs/util/subscribeToResult.js",
              "moduleName": "./~/rxjs/util/subscribeToResult.js",
              "type": "cjs require",
              "userRequest": "../InnerSubscriber",
              "loc": "7:24-53"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map"
        },
        {
          "id": 39,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Notification.js",
          "name": "./~/rxjs/Notification.js",
          "index": 66,
          "index2": 61,
          "size": 4775,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
          "issuerId": 54,
          "issuerName": "./~/rxjs/operator/observeOn.js",
          "profile": {
            "factory": 8,
            "building": 8,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 54,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
              "module": "./~/rxjs/operator/observeOn.js",
              "moduleName": "./~/rxjs/operator/observeOn.js",
              "type": "cjs require",
              "userRequest": "../Notification",
              "loc": "8:21-47"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, exception) {\n        this.kind = kind;\n        this.value = value;\n        this.exception = exception;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.exception);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.exception);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.exception);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` exception.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map"
        },
        {
          "id": 40,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observer.js",
          "name": "./~/rxjs/Observer.js",
          "index": 14,
          "index2": 10,
          "size": 193,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "issuerId": 2,
          "issuerName": "./~/rxjs/Subscriber.js",
          "profile": {
            "factory": 50,
            "building": 9
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
              "module": "./~/rxjs/Subscriber.js",
              "moduleName": "./~/rxjs/Subscriber.js",
              "type": "cjs require",
              "userRequest": "./Observer",
              "loc": "9:17-38"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map"
        },
        {
          "id": 41,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Scheduler.js",
          "name": "./~/rxjs/Scheduler.js",
          "index": 25,
          "index2": 19,
          "size": 1885,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
          "issuerId": 59,
          "issuerName": "./~/rxjs/scheduler/AsyncScheduler.js",
          "profile": {
            "factory": 6,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 59,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
              "module": "./~/rxjs/scheduler/AsyncScheduler.js",
              "moduleName": "./~/rxjs/scheduler/AsyncScheduler.js",
              "type": "cjs require",
              "userRequest": "../Scheduler",
              "loc": "7:18-41"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map"
        },
        {
          "id": 42,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/SubjectSubscription.js",
          "name": "./~/rxjs/SubjectSubscription.js",
          "index": 54,
          "index2": 51,
          "size": 1401,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "issuerId": 14,
          "issuerName": "./~/rxjs/Subject.js",
          "profile": {
            "factory": 40,
            "building": 48,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
              "module": "./~/rxjs/Subject.js",
              "moduleName": "./~/rxjs/Subject.js",
              "type": "cjs require",
              "userRequest": "./SubjectSubscription",
              "loc": "11:28-60"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map"
        },
        {
          "id": 43,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "name": "./~/rxjs/observable/ArrayLikeObservable.js",
          "index": 64,
          "index2": 60,
          "size": 2562,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 25,
            "building": 20,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "./ArrayLikeObservable",
              "loc": "12:28-60"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map"
        },
        {
          "id": 44,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "name": "./~/rxjs/observable/ArrayObservable.js",
          "index": 60,
          "index2": 59,
          "size": 4573,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 24,
            "building": 13,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "./ArrayObservable",
              "loc": "11:24-52"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` Scheduler, which means the `next`\n     * notifications are sent synchronously, although with a different Scheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map"
        },
        {
          "id": 45,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "name": "./~/rxjs/observable/FromObservable.js",
          "index": 57,
          "index2": 63,
          "size": 4909,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
          "issuerId": 49,
          "issuerName": "./~/rxjs/observable/from.js",
          "profile": {
            "factory": 37,
            "building": 63,
            "dependencies": 20
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 49,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
              "module": "./~/rxjs/observable/from.js",
              "moduleName": "./~/rxjs/observable/from.js",
              "type": "cjs require",
              "userRequest": "./FromObservable",
              "loc": "2:23-50"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operator/observeOn');\nvar observable_1 = require('../symbol/observable');\nvar isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.$$observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.$$observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map"
        },
        {
          "id": 46,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "name": "./~/rxjs/observable/IntervalObservable.js",
          "index": 19,
          "index2": 22,
          "size": 3546,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
          "issuerId": 50,
          "issuerName": "./~/rxjs/observable/interval.js",
          "profile": {
            "factory": 57,
            "building": 56,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 50,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
              "module": "./~/rxjs/observable/interval.js",
              "moduleName": "./~/rxjs/observable/interval.js",
              "type": "cjs require",
              "userRequest": "./IntervalObservable",
              "loc": "2:27-58"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified Scheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` Scheduler to provide a notion of time, but you may pass any\n     * Scheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map"
        },
        {
          "id": 47,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
          "name": "./~/rxjs/observable/IteratorObservable.js",
          "index": 59,
          "index2": 55,
          "size": 4801,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 24,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "./IteratorObservable",
              "loc": "10:27-58"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.$$iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.$$iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.$$iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.$$iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map"
        },
        {
          "id": 48,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
          "name": "./~/rxjs/observable/PromiseObservable.js",
          "index": 58,
          "index2": 54,
          "size": 4671,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 24,
            "building": 10,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "./PromiseObservable",
              "loc": "9:26-56"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map"
        },
        {
          "id": 49,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
          "name": "./~/rxjs/observable/from.js",
          "index": 56,
          "index2": 64,
          "size": 153,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 11,
            "building": 48
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "rxjs/observable/from",
              "loc": "12:12-43"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar FromObservable_1 = require('./FromObservable');\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map"
        },
        {
          "id": 50,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
          "name": "./~/rxjs/observable/interval.js",
          "index": 18,
          "index2": 23,
          "size": 177,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
          "issuerId": 24,
          "issuerName": "./~/rxjs/add/observable/interval.js",
          "profile": {
            "factory": 44,
            "building": 36
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
              "module": "./~/rxjs/add/observable/interval.js",
              "moduleName": "./~/rxjs/add/observable/interval.js",
              "type": "cjs require",
              "userRequest": "../../observable/interval",
              "loc": "3:17-53"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map"
        },
        {
          "id": 51,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/filter.js",
          "name": "./~/rxjs/operator/filter.js",
          "index": 69,
          "index2": 66,
          "size": 3575,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
          "issuerId": 32,
          "issuerName": "./~/redux-observable/lib/ActionsObservable.js",
          "profile": {
            "factory": 51,
            "building": 47,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 32,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
              "module": "./~/redux-observable/lib/ActionsObservable.js",
              "moduleName": "./~/redux-observable/lib/ActionsObservable.js",
              "type": "cjs require",
              "userRequest": "rxjs/operator/filter",
              "loc": "12:14-45"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map"
        },
        {
          "id": 52,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mapTo.js",
          "name": "./~/rxjs/operator/mapTo.js",
          "index": 34,
          "index2": 32,
          "size": 2187,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
          "issuerId": 25,
          "issuerName": "./~/rxjs/add/operator/mapTo.js",
          "profile": {
            "factory": 31,
            "building": 50,
            "dependencies": 18
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 25,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
              "module": "./~/rxjs/add/operator/mapTo.js",
              "moduleName": "./~/rxjs/add/operator/mapTo.js",
              "type": "cjs require",
              "userRequest": "../../operator/mapTo",
              "loc": "3:14-45"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map"
        },
        {
          "id": 53,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
          "name": "./~/rxjs/operator/mergeMap.js",
          "index": 27,
          "index2": 30,
          "size": 6375,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
          "issuerId": 26,
          "issuerName": "./~/rxjs/add/operator/mergeMap.js",
          "profile": {
            "factory": 33,
            "building": 49
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 26,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
              "module": "./~/rxjs/add/operator/mergeMap.js",
              "moduleName": "./~/rxjs/add/operator/mergeMap.js",
              "type": "cjs require",
              "userRequest": "../../operator/mergeMap",
              "loc": "3:17-51"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map"
        },
        {
          "id": 54,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
          "name": "./~/rxjs/operator/observeOn.js",
          "index": 65,
          "index2": 62,
          "size": 2837,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "issuerId": 45,
          "issuerName": "./~/rxjs/observable/FromObservable.js",
          "profile": {
            "factory": 25,
            "building": 26,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
              "module": "./~/rxjs/observable/FromObservable.js",
              "moduleName": "./~/rxjs/observable/FromObservable.js",
              "type": "cjs require",
              "userRequest": "../operator/observeOn",
              "loc": "15:18-50"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map"
        },
        {
          "id": 55,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
          "name": "./~/rxjs/operator/switchMap.js",
          "index": 67,
          "index2": 65,
          "size": 5837,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "issuerId": 22,
          "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "profile": {
            "factory": 27,
            "building": 63,
            "dependencies": 29
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
              "module": "./~/redux-observable/lib/createEpicMiddleware.js",
              "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
              "type": "cjs require",
              "userRequest": "rxjs/operator/switchMap",
              "loc": "14:17-51"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map"
        },
        {
          "id": 56,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
          "name": "./~/rxjs/operator/takeUntil.js",
          "index": 36,
          "index2": 34,
          "size": 2889,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
          "issuerId": 27,
          "issuerName": "./~/rxjs/add/operator/takeUntil.js",
          "profile": {
            "factory": 30,
            "building": 53,
            "dependencies": 40
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 27,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
              "module": "./~/rxjs/add/operator/takeUntil.js",
              "moduleName": "./~/rxjs/add/operator/takeUntil.js",
              "type": "cjs require",
              "userRequest": "../../operator/takeUntil",
              "loc": "3:18-53"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map"
        },
        {
          "id": 57,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/Action.js",
          "name": "./~/rxjs/scheduler/Action.js",
          "index": 23,
          "index2": 17,
          "size": 1638,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
          "issuerId": 58,
          "issuerName": "./~/rxjs/scheduler/AsyncAction.js",
          "profile": {
            "factory": 4,
            "building": 2,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 58,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
              "module": "./~/rxjs/scheduler/AsyncAction.js",
              "moduleName": "./~/rxjs/scheduler/AsyncAction.js",
              "type": "cjs require",
              "userRequest": "./Action",
              "loc": "8:15-34"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map"
        },
        {
          "id": 58,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
          "name": "./~/rxjs/scheduler/AsyncAction.js",
          "index": 22,
          "index2": 18,
          "size": 5626,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
          "issuerId": 60,
          "issuerName": "./~/rxjs/scheduler/async.js",
          "profile": {
            "factory": 5,
            "building": 11,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 60,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
              "module": "./~/rxjs/scheduler/async.js",
              "moduleName": "./~/rxjs/scheduler/async.js",
              "type": "cjs require",
              "userRequest": "./AsyncAction",
              "loc": "2:20-44"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map"
        },
        {
          "id": 59,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
          "name": "./~/rxjs/scheduler/AsyncScheduler.js",
          "index": 24,
          "index2": 20,
          "size": 1713,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
          "issuerId": 60,
          "issuerName": "./~/rxjs/scheduler/async.js",
          "profile": {
            "factory": 5,
            "building": 8
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 60,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
              "module": "./~/rxjs/scheduler/async.js",
              "moduleName": "./~/rxjs/scheduler/async.js",
              "type": "cjs require",
              "userRequest": "./AsyncScheduler",
              "loc": "3:23-50"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map"
        },
        {
          "id": 60,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
          "name": "./~/rxjs/scheduler/async.js",
          "index": 21,
          "index2": 21,
          "size": 225,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "issuerId": 46,
          "issuerName": "./~/rxjs/observable/IntervalObservable.js",
          "profile": {
            "factory": 13,
            "building": 28
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 46,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
              "module": "./~/rxjs/observable/IntervalObservable.js",
              "moduleName": "./~/rxjs/observable/IntervalObservable.js",
              "type": "cjs require",
              "userRequest": "../scheduler/async",
              "loc": "9:14-43"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map"
        },
        {
          "id": 61,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/UnsubscriptionError.js",
          "name": "./~/rxjs/util/UnsubscriptionError.js",
          "index": 13,
          "index2": 8,
          "size": 1068,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "issuerId": 3,
          "issuerName": "./~/rxjs/Subscription.js",
          "profile": {
            "factory": 46,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/UnsubscriptionError",
              "loc": "7:28-65"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map"
        },
        {
          "id": 62,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isNumeric.js",
          "name": "./~/rxjs/util/isNumeric.js",
          "index": 20,
          "index2": 16,
          "size": 501,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "issuerId": 46,
          "issuerName": "./~/rxjs/observable/IntervalObservable.js",
          "profile": {
            "factory": 12,
            "building": 27,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 46,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
              "module": "./~/rxjs/observable/IntervalObservable.js",
              "moduleName": "./~/rxjs/observable/IntervalObservable.js",
              "type": "cjs require",
              "userRequest": "../util/isNumeric",
              "loc": "7:18-46"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map"
        },
        {
          "id": 63,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isObject.js",
          "name": "./~/rxjs/util/isObject.js",
          "index": 10,
          "index2": 5,
          "size": 151,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "issuerId": 3,
          "issuerName": "./~/rxjs/Subscription.js",
          "profile": {
            "factory": 45,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/isObject",
              "loc": "3:17-43"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map"
        },
        {
          "id": 64,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isScheduler.js",
          "name": "./~/rxjs/util/isScheduler.js",
          "index": 63,
          "index2": 58,
          "size": 178,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "issuerId": 44,
          "issuerName": "./~/rxjs/observable/ArrayObservable.js",
          "profile": {
            "factory": 21,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
              "module": "./~/rxjs/observable/ArrayObservable.js",
              "moduleName": "./~/rxjs/observable/ArrayObservable.js",
              "type": "cjs require",
              "userRequest": "../util/isScheduler",
              "loc": "10:20-50"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map"
        },
        {
          "id": 65,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
          "name": "./~/rxjs/util/toSubscriber.js",
          "index": 5,
          "index2": 13,
          "size": 707,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "issuerId": 0,
          "issuerName": "./~/rxjs/Observable.js",
          "profile": {
            "factory": 34,
            "building": 37,
            "dependencies": 34
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
              "module": "./~/rxjs/Observable.js",
              "moduleName": "./~/rxjs/Observable.js",
              "type": "cjs require",
              "userRequest": "./util/toSubscriber",
              "loc": "3:21-51"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map"
        },
        {
          "id": 66,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/tryCatch.js",
          "name": "./~/rxjs/util/tryCatch.js",
          "index": 11,
          "index2": 7,
          "size": 422,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "issuerId": 3,
          "issuerName": "./~/rxjs/Subscription.js",
          "profile": {
            "factory": 46,
            "building": 8,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
              "module": "./~/rxjs/Subscription.js",
              "moduleName": "./~/rxjs/Subscription.js",
              "type": "cjs require",
              "userRequest": "./util/tryCatch",
              "loc": "5:17-43"
            }
          ],
          "usedExports": true,
          "source": "\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map"
        },
        {
          "id": 67,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
          "name": "./~/symbol-observable/index.js",
          "index": 44,
          "index2": 42,
          "size": 101,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
          "issuerId": 12,
          "issuerName": "./~/redux/lib/createStore.js",
          "profile": {
            "factory": 72,
            "building": 28,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
              "module": "./~/redux/lib/createStore.js",
              "moduleName": "./~/redux/lib/createStore.js",
              "type": "cjs require",
              "userRequest": "symbol-observable",
              "loc": "11:24-52"
            }
          ],
          "usedExports": true,
          "source": "/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n"
        },
        {
          "id": 68,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/ponyfill.js",
          "name": "./~/symbol-observable/ponyfill.js",
          "index": 45,
          "index2": 41,
          "size": 350,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
          "issuerId": 67,
          "issuerName": "./~/symbol-observable/index.js",
          "profile": {
            "factory": 6,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 67,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
              "module": "./~/symbol-observable/index.js",
              "moduleName": "./~/symbol-observable/index.js",
              "type": "cjs require",
              "userRequest": "./ponyfill",
              "loc": "4:17-38"
            }
          ],
          "usedExports": true,
          "source": "'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n"
        },
        {
          "id": 69,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 3,
          "index2": 0,
          "size": 548,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
          "issuerId": 1,
          "issuerName": "./~/rxjs/util/root.js",
          "profile": {
            "factory": 113,
            "building": 10
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
              "module": "./~/rxjs/util/root.js",
              "moduleName": "./~/rxjs/util/root.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-44"
            }
          ],
          "usedExports": true,
          "source": "module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n"
        },
        {
          "id": 70,
          "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "name": "./src/index.js",
          "index": 0,
          "index2": 70,
          "size": 1336,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "profile": {
            "factory": 21,
            "building": 583
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [],
          "usedExports": true,
          "source": "'use strict';\n\nvar _Observable = require('rxjs/Observable');\n\nrequire('rxjs/add/observable/interval');\n\nrequire('rxjs/add/operator/mergeMap');\n\nrequire('rxjs/add/operator/mapTo');\n\nrequire('rxjs/add/operator/takeUntil');\n\nvar _redux = require('redux');\n\nvar _createEpicMiddleware = require('redux-observable/lib/createEpicMiddleware');\n\nvar $ = document.querySelector.bind(document);\n\nvar tickEpic = function tickEpic(action$) {\n  return action$.ofType('START').mergeMap(function (action) {\n    return _Observable.Observable.interval(1000).mapTo({ type: 'TICK' }).takeUntil(action$.ofType('STOP'));\n  });\n};\n\nvar TimerReducer = function TimerReducer() {\n  var state = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n  var action = arguments[1];\n\n  switch (action.type) {\n    case 'TICK':\n      return state + 1;\n    default:\n      return state;\n  }\n};\n\nvar epicMiddleware = (0, _createEpicMiddleware.createEpicMiddleware)(tickEpic);\n\nvar store = (0, _redux.createStore)(TimerReducer, (0, _redux.applyMiddleware)(epicMiddleware));\n\nvar renderApp = function renderApp() {\n  $('body').innerHTML = 'Count: ' + store.getState();\n};\n\nstore.subscribe(renderApp);\n\nstore.dispatch({ type: 'START' });\n\n// setTimeout(() => store.dispatch({type: 'STOP'}), 3000);\n\n// setTimeout(() => store.dispatch({type: 'START'}), 5000);"
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "moduleId": 70,
          "module": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "moduleName": "./src/index.js",
          "loc": "",
          "name": "main",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
      "name": "./~/rxjs/Observable.js",
      "index": 1,
      "index2": 15,
      "size": 6035,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 15,
        "building": 17
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "5:19-43"
        },
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Observable",
          "loc": "7:19-42"
        },
        {
          "moduleId": 15,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/EmptyObservable.js",
          "module": "./~/rxjs/observable/EmptyObservable.js",
          "moduleName": "./~/rxjs/observable/EmptyObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 16,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ScalarObservable.js",
          "module": "./~/rxjs/observable/ScalarObservable.js",
          "moduleName": "./~/rxjs/observable/ScalarObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
          "module": "./~/rxjs/add/observable/interval.js",
          "moduleName": "./~/rxjs/add/observable/interval.js",
          "type": "cjs require",
          "userRequest": "../../Observable",
          "loc": "2:19-46"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
          "module": "./~/rxjs/add/operator/mapTo.js",
          "moduleName": "./~/rxjs/add/operator/mapTo.js",
          "type": "cjs require",
          "userRequest": "../../Observable",
          "loc": "2:19-46"
        },
        {
          "moduleId": 26,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
          "module": "./~/rxjs/add/operator/mergeMap.js",
          "moduleName": "./~/rxjs/add/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../../Observable",
          "loc": "2:19-46"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
          "module": "./~/rxjs/add/operator/takeUntil.js",
          "moduleName": "./~/rxjs/add/operator/takeUntil.js",
          "type": "cjs require",
          "userRequest": "../../Observable",
          "loc": "2:19-46"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
          "module": "./~/redux-observable/lib/ActionsObservable.js",
          "moduleName": "./~/redux-observable/lib/ActionsObservable.js",
          "type": "cjs require",
          "userRequest": "rxjs/Observable",
          "loc": "10:19-45"
        },
        {
          "moduleId": 39,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Notification.js",
          "module": "./~/rxjs/Notification.js",
          "moduleName": "./~/rxjs/Notification.js",
          "type": "cjs require",
          "userRequest": "./Observable",
          "loc": "2:19-42"
        },
        {
          "moduleId": 43,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "14:19-43"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "module": "./~/rxjs/observable/IntervalObservable.js",
          "moduleName": "./~/rxjs/observable/IntervalObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
          "module": "./~/rxjs/observable/PromiseObservable.js",
          "moduleName": "./~/rxjs/observable/PromiseObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "rxjs/Observable",
          "loc": "3:18-44"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map"
    },
    {
      "id": 1,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
      "name": "./~/rxjs/util/root.js",
      "index": 2,
      "index2": 2,
      "size": 686,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
      "issuerId": 0,
      "issuerName": "./~/rxjs/Observable.js",
      "profile": {
        "factory": 35,
        "building": 39
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./util/root",
          "loc": "2:13-35"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/iterator.js",
          "module": "./~/rxjs/symbol/iterator.js",
          "moduleName": "./~/rxjs/symbol/iterator.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 7,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/observable.js",
          "module": "./~/rxjs/symbol/observable.js",
          "moduleName": "./~/rxjs/symbol/observable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 8,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/rxSubscriber.js",
          "module": "./~/rxjs/symbol/rxSubscriber.js",
          "moduleName": "./~/rxjs/symbol/rxSubscriber.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./root",
          "loc": "2:13-30"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "7:13-36"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
          "module": "./~/rxjs/observable/PromiseObservable.js",
          "moduleName": "./~/rxjs/observable/PromiseObservable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "7:13-36"
        },
        {
          "moduleId": 58,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
          "module": "./~/rxjs/scheduler/AsyncAction.js",
          "moduleName": "./~/rxjs/scheduler/AsyncAction.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "7:13-36"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n/* tslint:disable:no-unused-variable */\nvar freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\nvar freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map"
    },
    {
      "id": 2,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
      "name": "./~/rxjs/Subscriber.js",
      "index": 6,
      "index2": 12,
      "size": 8870,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
      "issuerId": 14,
      "issuerName": "./~/rxjs/Subject.js",
      "profile": {
        "factory": 39,
        "building": 34,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/OuterSubscriber.js",
          "module": "./~/rxjs/OuterSubscriber.js",
          "moduleName": "./~/rxjs/OuterSubscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "7:19-42"
        },
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "8:19-42"
        },
        {
          "moduleId": 38,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/InnerSubscriber.js",
          "module": "./~/rxjs/InnerSubscriber.js",
          "moduleName": "./~/rxjs/InnerSubscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "7:19-42"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/filter.js",
          "module": "./~/rxjs/operator/filter.js",
          "moduleName": "./~/rxjs/operator/filter.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 52,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mapTo.js",
          "module": "./~/rxjs/operator/mapTo.js",
          "moduleName": "./~/rxjs/operator/mapTo.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 54,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
          "module": "./~/rxjs/operator/observeOn.js",
          "moduleName": "./~/rxjs/operator/observeOn.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 65,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
          "module": "./~/rxjs/util/toSubscriber.js",
          "moduleName": "./~/rxjs/util/toSubscriber.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "2:19-43"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map"
    },
    {
      "id": 3,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "name": "./~/rxjs/Subscription.js",
      "index": 8,
      "index2": 9,
      "size": 5992,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
      "issuerId": 14,
      "issuerName": "./~/rxjs/Subject.js",
      "profile": {
        "factory": 39,
        "building": 40,
        "dependencies": 44
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "8:21-46"
        },
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "9:21-46"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/SubjectSubscription.js",
          "module": "./~/rxjs/SubjectSubscription.js",
          "moduleName": "./~/rxjs/SubjectSubscription.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "7:21-46"
        },
        {
          "moduleId": 57,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/Action.js",
          "module": "./~/rxjs/scheduler/Action.js",
          "moduleName": "./~/rxjs/scheduler/Action.js",
          "type": "cjs require",
          "userRequest": "../Subscription",
          "loc": "7:21-47"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map"
    },
    {
      "id": 4,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isArray.js",
      "name": "./~/rxjs/util/isArray.js",
      "index": 9,
      "index2": 4,
      "size": 146,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "issuerId": 3,
      "issuerName": "./~/rxjs/Subscription.js",
      "profile": {
        "factory": 44,
        "building": 11
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isArray",
          "loc": "2:16-41"
        },
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./isArray",
          "loc": "3:16-36"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isArray",
          "loc": "7:16-42"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isNumeric.js",
          "module": "./~/rxjs/util/isNumeric.js",
          "moduleName": "./~/rxjs/util/isNumeric.js",
          "type": "cjs require",
          "userRequest": "../util/isArray",
          "loc": "2:16-42"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map"
    },
    {
      "id": 5,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/OuterSubscriber.js",
      "name": "./~/rxjs/OuterSubscriber.js",
      "index": 32,
      "index2": 29,
      "size": 1107,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
      "issuerId": 53,
      "issuerName": "./~/rxjs/operator/mergeMap.js",
      "profile": {
        "factory": 45,
        "building": 47,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 53,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
          "module": "./~/rxjs/operator/mergeMap.js",
          "moduleName": "./~/rxjs/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "8:24-53"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
          "module": "./~/rxjs/operator/switchMap.js",
          "moduleName": "./~/rxjs/operator/switchMap.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "7:24-53"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
          "module": "./~/rxjs/operator/takeUntil.js",
          "moduleName": "./~/rxjs/operator/takeUntil.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "7:24-53"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map"
    },
    {
      "id": 6,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/iterator.js",
      "name": "./~/rxjs/symbol/iterator.js",
      "index": 30,
      "index2": 26,
      "size": 1032,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 25,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "6:17-46"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "13:17-46"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "9:17-46"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nif (typeof Symbol === 'function') {\n    if (Symbol.iterator) {\n        exports.$$iterator = Symbol.iterator;\n    }\n    else if (typeof Symbol.for === 'function') {\n        exports.$$iterator = Symbol.for('iterator');\n    }\n}\nelse {\n    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {\n        // Bug for mozilla version\n        exports.$$iterator = '@@iterator';\n    }\n    else if (root_1.root.Map) {\n        // es6-shim specific logic\n        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {\n                exports.$$iterator = key;\n                break;\n            }\n        }\n    }\n    else {\n        exports.$$iterator = '@@iterator';\n    }\n}\n//# sourceMappingURL=iterator.js.map"
    },
    {
      "id": 7,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/observable.js",
      "name": "./~/rxjs/symbol/observable.js",
      "index": 16,
      "index2": 14,
      "size": 631,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
      "issuerId": 0,
      "issuerName": "./~/rxjs/Observable.js",
      "profile": {
        "factory": 35,
        "building": 41,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./symbol/observable",
          "loc": "4:19-49"
        },
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../symbol/observable",
          "loc": "8:19-50"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/observable",
          "loc": "16:19-50"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map"
    },
    {
      "id": 8,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/symbol/rxSubscriber.js",
      "name": "./~/rxjs/symbol/rxSubscriber.js",
      "index": 15,
      "index2": 11,
      "size": 270,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
      "issuerId": 14,
      "issuerName": "./~/rxjs/Subject.js",
      "profile": {
        "factory": 40,
        "building": 60,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./symbol/rxSubscriber",
          "loc": "10:21-53"
        },
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./symbol/rxSubscriber",
          "loc": "12:21-53"
        },
        {
          "moduleId": 65,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
          "module": "./~/rxjs/util/toSubscriber.js",
          "moduleName": "./~/rxjs/util/toSubscriber.js",
          "type": "cjs require",
          "userRequest": "../symbol/rxSubscriber",
          "loc": "3:21-54"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map"
    },
    {
      "id": 9,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
      "name": "./~/rxjs/util/subscribeToResult.js",
      "index": 28,
      "index2": 28,
      "size": 2631,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
      "issuerId": 53,
      "issuerName": "./~/rxjs/operator/mergeMap.js",
      "profile": {
        "factory": 44,
        "building": 50,
        "dependencies": 16
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 53,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
          "module": "./~/rxjs/operator/mergeMap.js",
          "moduleName": "./~/rxjs/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "7:26-62"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
          "module": "./~/rxjs/operator/switchMap.js",
          "moduleName": "./~/rxjs/operator/switchMap.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "8:26-62"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
          "module": "./~/rxjs/operator/takeUntil.js",
          "moduleName": "./~/rxjs/operator/takeUntil.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "8:26-62"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar root_1 = require('./root');\nvar isArray_1 = require('./isArray');\nvar isPromise_1 = require('./isPromise');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    if (isArray_1.isArray(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (typeof result[iterator_1.$$iterator] === 'function') {\n        var iterator = result[iterator_1.$$iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (typeof result[observable_1.$$observable] === 'function') {\n        var obs = result[observable_1.$$observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new Error('invalid observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        destination.error(new TypeError('unknown type returned'));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map"
    },
    {
      "id": 10,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
      "name": "./~/lodash/isPlainObject.js",
      "index": 39,
      "index2": 40,
      "size": 1877,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
      "issuerId": 36,
      "issuerName": "./~/redux/lib/combineReducers.js",
      "profile": {
        "factory": 75,
        "building": 9
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 12,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
          "module": "./~/redux/lib/createStore.js",
          "moduleName": "./~/redux/lib/createStore.js",
          "type": "cjs require",
          "userRequest": "lodash/isPlainObject",
          "loc": "7:21-52"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
          "module": "./~/redux/lib/combineReducers.js",
          "moduleName": "./~/redux/lib/combineReducers.js",
          "type": "cjs require",
          "userRequest": "lodash/isPlainObject",
          "loc": "8:21-52"
        }
      ],
      "usedExports": true,
      "source": "var getPrototype = require('./_getPrototype'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n"
    },
    {
      "id": 11,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/compose.js",
      "name": "./~/redux/lib/compose.js",
      "index": 50,
      "index2": 47,
      "size": 1124,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 15,
        "building": 86
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./compose",
          "loc": "22:15-35"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/applyMiddleware.js",
          "module": "./~/redux/lib/applyMiddleware.js",
          "moduleName": "./~/redux/lib/applyMiddleware.js",
          "type": "cjs require",
          "userRequest": "./compose",
          "loc": "9:15-35"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}"
    },
    {
      "id": 12,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
      "name": "./~/redux/lib/createStore.js",
      "index": 38,
      "index2": 43,
      "size": 9185,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 14,
        "building": 83,
        "dependencies": 69
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./createStore",
          "loc": "6:19-43"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
          "module": "./~/redux/lib/combineReducers.js",
          "moduleName": "./~/redux/lib/combineReducers.js",
          "type": "cjs require",
          "userRequest": "./createStore",
          "loc": "6:19-43"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}"
    },
    {
      "id": 13,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/utils/warning.js",
      "name": "./~/redux/lib/utils/warning.js",
      "index": 47,
      "index2": 44,
      "size": 694,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 16,
        "building": 88
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./utils/warning",
          "loc": "26:15-41"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
          "module": "./~/redux/lib/combineReducers.js",
          "moduleName": "./~/redux/lib/combineReducers.js",
          "type": "cjs require",
          "userRequest": "./utils/warning",
          "loc": "12:15-41"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}"
    },
    {
      "id": 14,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
      "name": "./~/rxjs/Subject.js",
      "index": 52,
      "index2": 52,
      "size": 5335,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 9,
        "building": 46,
        "dependencies": 38
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "rxjs/Subject",
          "loc": "8:15-38"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
          "module": "./~/rxjs/BehaviorSubject.js",
          "moduleName": "./~/rxjs/BehaviorSubject.js",
          "type": "cjs require",
          "userRequest": "./Subject",
          "loc": "7:16-36"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map"
    },
    {
      "id": 15,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/EmptyObservable.js",
      "name": "./~/rxjs/observable/EmptyObservable.js",
      "index": 62,
      "index2": 57,
      "size": 2708,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
      "issuerId": 44,
      "issuerName": "./~/rxjs/observable/ArrayObservable.js",
      "profile": {
        "factory": 21,
        "building": 5,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 43,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "./EmptyObservable",
          "loc": "9:24-52"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "./EmptyObservable",
          "loc": "9:24-52"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map"
    },
    {
      "id": 16,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ScalarObservable.js",
      "name": "./~/rxjs/observable/ScalarObservable.js",
      "index": 61,
      "index2": 56,
      "size": 1879,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
      "issuerId": 44,
      "issuerName": "./~/rxjs/observable/ArrayObservable.js",
      "profile": {
        "factory": 20,
        "building": 7,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 43,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "./ScalarObservable",
          "loc": "8:25-54"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "./ScalarObservable",
          "loc": "8:25-54"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map"
    },
    {
      "id": 17,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/ObjectUnsubscribedError.js",
      "name": "./~/rxjs/util/ObjectUnsubscribedError.js",
      "index": 53,
      "index2": 50,
      "size": 955,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
      "issuerId": 37,
      "issuerName": "./~/rxjs/BehaviorSubject.js",
      "profile": {
        "factory": 47,
        "building": 28
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./util/ObjectUnsubscribedError",
          "loc": "10:32-73"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
          "module": "./~/rxjs/BehaviorSubject.js",
          "moduleName": "./~/rxjs/BehaviorSubject.js",
          "type": "cjs require",
          "userRequest": "./util/ObjectUnsubscribedError",
          "loc": "8:32-73"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map"
    },
    {
      "id": 18,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/errorObject.js",
      "name": "./~/rxjs/util/errorObject.js",
      "index": 12,
      "index2": 6,
      "size": 177,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "issuerId": 3,
      "issuerName": "./~/rxjs/Subscription.js",
      "profile": {
        "factory": 46,
        "building": 9
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/errorObject",
          "loc": "6:20-49"
        },
        {
          "moduleId": 66,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/tryCatch.js",
          "module": "./~/rxjs/util/tryCatch.js",
          "moduleName": "./~/rxjs/util/tryCatch.js",
          "type": "cjs require",
          "userRequest": "./errorObject",
          "loc": "2:20-44"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map"
    },
    {
      "id": 19,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isFunction.js",
      "name": "./~/rxjs/util/isFunction.js",
      "index": 7,
      "index2": 3,
      "size": 148,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
      "issuerId": 2,
      "issuerName": "./~/rxjs/Subscriber.js",
      "profile": {
        "factory": 50,
        "building": 10
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./util/isFunction",
          "loc": "7:19-47"
        },
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isFunction",
          "loc": "4:19-47"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map"
    },
    {
      "id": 20,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isPromise.js",
      "name": "./~/rxjs/util/isPromise.js",
      "index": 29,
      "index2": 25,
      "size": 207,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 23,
        "building": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./isPromise",
          "loc": "4:18-40"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isPromise",
          "loc": "8:18-46"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map"
    },
    {
      "id": 21,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/webpack/buildin/global.js",
      "name": "(webpack)/buildin/global.js",
      "index": 4,
      "index2": 1,
      "size": 506,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
      "issuerId": 1,
      "issuerName": "./~/rxjs/util/root.js",
      "profile": {
        "factory": 113,
        "building": 10
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
          "module": "./~/rxjs/util/root.js",
          "moduleName": "./~/rxjs/util/root.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-95"
        },
        {
          "moduleId": 67,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
          "module": "./~/symbol-observable/index.js",
          "moduleName": "./~/symbol-observable/index.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-95"
        }
      ],
      "usedExports": true,
      "source": "var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"
    },
    {
      "id": 22,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "name": "./~/redux-observable/lib/createEpicMiddleware.js",
      "index": 51,
      "index2": 69,
      "size": 2196,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 18,
        "building": 24
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "redux-observable/lib/createEpicMiddleware",
          "loc": "15:28-80"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEpicMiddleware = createEpicMiddleware;\n\nvar _Subject = require('rxjs/Subject');\n\nvar _BehaviorSubject = require('rxjs/BehaviorSubject');\n\nvar _from = require('rxjs/observable/from');\n\nvar _switchMap = require('rxjs/operator/switchMap');\n\nvar _ActionsObservable = require('./ActionsObservable');\n\nvar _EPIC_END = require('./EPIC_END');\n\nvar defaultAdapter = {\n  input: function input(action$) {\n    return action$;\n  },\n  output: function output(action$) {\n    return action$;\n  }\n};\n\nvar defaultOptions = {\n  adapter: defaultAdapter\n};\n\nfunction createEpicMiddleware(epic) {\n  var _ref = arguments.length <= 1 || arguments[1] === undefined ? defaultOptions : arguments[1];\n\n  var _ref$adapter = _ref.adapter;\n  var adapter = _ref$adapter === undefined ? defaultAdapter : _ref$adapter;\n\n  var input$ = new _Subject.Subject();\n  var action$ = adapter.input(new _ActionsObservable.ActionsObservable(input$));\n  var epic$ = new _BehaviorSubject.BehaviorSubject(epic);\n  var store = void 0;\n\n  var epicMiddleware = function epicMiddleware(_store) {\n    store = _store;\n\n    return function (next) {\n      if (typeof epic === 'function') {\n        _switchMap.switchMap.call(epic$, function (epic) {\n          return adapter.output(epic(action$, store));\n        }).subscribe(store.dispatch);\n      }\n\n      return function (action) {\n        if (typeof action === 'function') {\n          if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {\n            console.warn('DEPRECATION: Using thunkservables with redux-observable is now deprecated in favor of the new \"Epics\" feature. See http://redux-observable.js.org/docs/FAQ.html#why-were-thunkservables-deprecated');\n          }\n\n          var out$ = (0, _from.from)(action(action$, store));\n          return out$.subscribe(store.dispatch);\n        } else {\n          var result = next(action);\n          input$.next(action);\n          return result;\n        }\n      };\n    };\n  };\n\n  epicMiddleware.replaceEpic = function (epic) {\n    store.dispatch({ type: _EPIC_END.EPIC_END });\n    epic$.next(epic);\n  };\n\n  return epicMiddleware;\n}"
    },
    {
      "id": 23,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "name": "./~/redux/lib/index.js",
      "index": 37,
      "index2": 49,
      "size": 1941,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 20,
        "building": 38
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "redux",
          "loc": "13:13-29"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];"
    },
    {
      "id": 24,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
      "name": "./~/rxjs/add/observable/interval.js",
      "index": 17,
      "index2": 24,
      "size": 209,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 16,
        "building": 6,
        "dependencies": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "rxjs/add/observable/interval",
          "loc": "5:0-39"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map"
    },
    {
      "id": 25,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
      "name": "./~/rxjs/add/operator/mapTo.js",
      "index": 33,
      "index2": 33,
      "size": 199,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 17,
        "building": 20,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "rxjs/add/operator/mapTo",
          "loc": "9:0-34"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mapTo_1 = require('../../operator/mapTo');\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map"
    },
    {
      "id": 26,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
      "name": "./~/rxjs/add/operator/mergeMap.js",
      "index": 26,
      "index2": 31,
      "size": 282,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 17,
        "building": 17,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "rxjs/add/operator/mergeMap",
          "loc": "7:0-37"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map"
    },
    {
      "id": 27,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
      "name": "./~/rxjs/add/operator/takeUntil.js",
      "index": 35,
      "index2": 35,
      "size": 223,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "issuerId": 70,
      "issuerName": "./src/index.js",
      "profile": {
        "factory": 18,
        "building": 20,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "cjs require",
          "userRequest": "rxjs/add/operator/takeUntil",
          "loc": "11:0-38"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeUntil_1 = require('../../operator/takeUntil');\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map"
    },
    {
      "id": 28,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
      "name": "./~/lodash/_getPrototype.js",
      "index": 40,
      "index2": 37,
      "size": 163,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
      "issuerId": 10,
      "issuerName": "./~/lodash/isPlainObject.js",
      "profile": {
        "factory": 25,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "module": "./~/lodash/isPlainObject.js",
          "moduleName": "./~/lodash/isPlainObject.js",
          "type": "cjs require",
          "userRequest": "./_getPrototype",
          "loc": "1:19-45"
        }
      ],
      "usedExports": true,
      "source": "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n"
    },
    {
      "id": 29,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_isHostObject.js",
      "name": "./~/lodash/_isHostObject.js",
      "index": 42,
      "index2": 38,
      "size": 552,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
      "issuerId": 10,
      "issuerName": "./~/lodash/isPlainObject.js",
      "profile": {
        "factory": 26,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "module": "./~/lodash/isPlainObject.js",
          "moduleName": "./~/lodash/isPlainObject.js",
          "type": "cjs require",
          "userRequest": "./_isHostObject",
          "loc": "2:19-45"
        }
      ],
      "usedExports": true,
      "source": "/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n"
    },
    {
      "id": 30,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_overArg.js",
      "name": "./~/lodash/_overArg.js",
      "index": 41,
      "index2": 36,
      "size": 382,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
      "issuerId": 28,
      "issuerName": "./~/lodash/_getPrototype.js",
      "profile": {
        "factory": 12,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/_getPrototype.js",
          "module": "./~/lodash/_getPrototype.js",
          "moduleName": "./~/lodash/_getPrototype.js",
          "type": "cjs require",
          "userRequest": "./_overArg",
          "loc": "1:14-35"
        }
      ],
      "usedExports": true,
      "source": "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n"
    },
    {
      "id": 31,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isObjectLike.js",
      "name": "./~/lodash/isObjectLike.js",
      "index": 43,
      "index2": 39,
      "size": 608,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
      "issuerId": 10,
      "issuerName": "./~/lodash/isPlainObject.js",
      "profile": {
        "factory": 26,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/lodash/isPlainObject.js",
          "module": "./~/lodash/isPlainObject.js",
          "moduleName": "./~/lodash/isPlainObject.js",
          "type": "cjs require",
          "userRequest": "./isObjectLike",
          "loc": "3:19-44"
        }
      ],
      "usedExports": true,
      "source": "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n"
    },
    {
      "id": 32,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
      "name": "./~/redux-observable/lib/ActionsObservable.js",
      "index": 68,
      "index2": 67,
      "size": 2901,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 10,
        "building": 32,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "./ActionsObservable",
          "loc": "16:25-55"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionsObservable = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Observable2 = require('rxjs/Observable');\n\nvar _filter = require('rxjs/operator/filter');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ActionsObservable = exports.ActionsObservable = function (_Observable) {\n  _inherits(ActionsObservable, _Observable);\n\n  function ActionsObservable(actionsSubject) {\n    _classCallCheck(this, ActionsObservable);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ActionsObservable).call(this));\n\n    _this.source = actionsSubject;\n    return _this;\n  }\n\n  _createClass(ActionsObservable, [{\n    key: 'lift',\n    value: function lift(operator) {\n      var observable = new ActionsObservable(this);\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: 'ofType',\n    value: function ofType() {\n      for (var _len = arguments.length, keys = Array(_len), _key = 0; _key < _len; _key++) {\n        keys[_key] = arguments[_key];\n      }\n\n      return _filter.filter.call(this, function (_ref) {\n        var type = _ref.type;\n\n        var len = keys.length;\n        if (len === 1) {\n          return type === keys[0];\n        } else {\n          for (var i = 0; i < len; i++) {\n            if (keys[i] === type) {\n              return true;\n            }\n          }\n        }\n        return false;\n      });\n    }\n  }]);\n\n  return ActionsObservable;\n}(_Observable2.Observable);"
    },
    {
      "id": 33,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/EPIC_END.js",
      "name": "./~/redux-observable/lib/EPIC_END.js",
      "index": 70,
      "index2": 68,
      "size": 144,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 11,
        "building": 37
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "./EPIC_END",
          "loc": "18:16-37"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EPIC_END = exports.EPIC_END = '@@redux-observable/EPIC_END';"
    },
    {
      "id": 34,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/applyMiddleware.js",
      "name": "./~/redux/lib/applyMiddleware.js",
      "index": 49,
      "index2": 48,
      "size": 2035,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 15,
        "building": 66,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./applyMiddleware",
          "loc": "18:23-51"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}"
    },
    {
      "id": 35,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/bindActionCreators.js",
      "name": "./~/redux/lib/bindActionCreators.js",
      "index": 48,
      "index2": 46,
      "size": 2043,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 14,
        "building": 86
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./bindActionCreators",
          "loc": "14:26-57"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}"
    },
    {
      "id": 36,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/combineReducers.js",
      "name": "./~/redux/lib/combineReducers.js",
      "index": 46,
      "index2": 45,
      "size": 5525,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
      "issuerId": 23,
      "issuerName": "./~/redux/lib/index.js",
      "profile": {
        "factory": 14,
        "building": 76,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/index.js",
          "module": "./~/redux/lib/index.js",
          "moduleName": "./~/redux/lib/index.js",
          "type": "cjs require",
          "userRequest": "./combineReducers",
          "loc": "10:23-51"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}"
    },
    {
      "id": 37,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/BehaviorSubject.js",
      "name": "./~/rxjs/BehaviorSubject.js",
      "index": 55,
      "index2": 53,
      "size": 1666,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 10,
        "building": 36,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "rxjs/BehaviorSubject",
          "loc": "10:23-54"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map"
    },
    {
      "id": 38,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/InnerSubscriber.js",
      "name": "./~/rxjs/InnerSubscriber.js",
      "index": 31,
      "index2": 27,
      "size": 1289,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
      "issuerId": 9,
      "issuerName": "./~/rxjs/util/subscribeToResult.js",
      "profile": {
        "factory": 16,
        "building": 24,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../InnerSubscriber",
          "loc": "7:24-53"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map"
    },
    {
      "id": 39,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Notification.js",
      "name": "./~/rxjs/Notification.js",
      "index": 66,
      "index2": 61,
      "size": 4775,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
      "issuerId": 54,
      "issuerName": "./~/rxjs/operator/observeOn.js",
      "profile": {
        "factory": 8,
        "building": 8,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 54,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
          "module": "./~/rxjs/operator/observeOn.js",
          "moduleName": "./~/rxjs/operator/observeOn.js",
          "type": "cjs require",
          "userRequest": "../Notification",
          "loc": "8:21-47"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, exception) {\n        this.kind = kind;\n        this.value = value;\n        this.exception = exception;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.exception);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.exception);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.exception);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` exception.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map"
    },
    {
      "id": 40,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observer.js",
      "name": "./~/rxjs/Observer.js",
      "index": 14,
      "index2": 10,
      "size": 193,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
      "issuerId": 2,
      "issuerName": "./~/rxjs/Subscriber.js",
      "profile": {
        "factory": 50,
        "building": 9
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./Observer",
          "loc": "9:17-38"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map"
    },
    {
      "id": 41,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Scheduler.js",
      "name": "./~/rxjs/Scheduler.js",
      "index": 25,
      "index2": 19,
      "size": 1885,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
      "issuerId": 59,
      "issuerName": "./~/rxjs/scheduler/AsyncScheduler.js",
      "profile": {
        "factory": 6,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 59,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
          "module": "./~/rxjs/scheduler/AsyncScheduler.js",
          "moduleName": "./~/rxjs/scheduler/AsyncScheduler.js",
          "type": "cjs require",
          "userRequest": "../Scheduler",
          "loc": "7:18-41"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map"
    },
    {
      "id": 42,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/SubjectSubscription.js",
      "name": "./~/rxjs/SubjectSubscription.js",
      "index": 54,
      "index2": 51,
      "size": 1401,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
      "issuerId": 14,
      "issuerName": "./~/rxjs/Subject.js",
      "profile": {
        "factory": 40,
        "building": 48,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./SubjectSubscription",
          "loc": "11:28-60"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map"
    },
    {
      "id": 43,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayLikeObservable.js",
      "name": "./~/rxjs/observable/ArrayLikeObservable.js",
      "index": 64,
      "index2": 60,
      "size": 2562,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 25,
        "building": 20,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./ArrayLikeObservable",
          "loc": "12:28-60"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map"
    },
    {
      "id": 44,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
      "name": "./~/rxjs/observable/ArrayObservable.js",
      "index": 60,
      "index2": 59,
      "size": 4573,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 24,
        "building": 13,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./ArrayObservable",
          "loc": "11:24-52"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` Scheduler, which means the `next`\n     * notifications are sent synchronously, although with a different Scheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map"
    },
    {
      "id": 45,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "name": "./~/rxjs/observable/FromObservable.js",
      "index": 57,
      "index2": 63,
      "size": 4909,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
      "issuerId": 49,
      "issuerName": "./~/rxjs/observable/from.js",
      "profile": {
        "factory": 37,
        "building": 63,
        "dependencies": 20
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 49,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
          "module": "./~/rxjs/observable/from.js",
          "moduleName": "./~/rxjs/observable/from.js",
          "type": "cjs require",
          "userRequest": "./FromObservable",
          "loc": "2:23-50"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operator/observeOn');\nvar observable_1 = require('../symbol/observable');\nvar isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.$$observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.$$observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map"
    },
    {
      "id": 46,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
      "name": "./~/rxjs/observable/IntervalObservable.js",
      "index": 19,
      "index2": 22,
      "size": 3546,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
      "issuerId": 50,
      "issuerName": "./~/rxjs/observable/interval.js",
      "profile": {
        "factory": 57,
        "building": 56,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
          "module": "./~/rxjs/observable/interval.js",
          "moduleName": "./~/rxjs/observable/interval.js",
          "type": "cjs require",
          "userRequest": "./IntervalObservable",
          "loc": "2:27-58"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified Scheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` Scheduler to provide a notion of time, but you may pass any\n     * Scheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map"
    },
    {
      "id": 47,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IteratorObservable.js",
      "name": "./~/rxjs/observable/IteratorObservable.js",
      "index": 59,
      "index2": 55,
      "size": 4801,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 24,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./IteratorObservable",
          "loc": "10:27-58"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.$$iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.$$iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.$$iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.$$iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map"
    },
    {
      "id": 48,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/PromiseObservable.js",
      "name": "./~/rxjs/observable/PromiseObservable.js",
      "index": 58,
      "index2": 54,
      "size": 4671,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 24,
        "building": 10,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./PromiseObservable",
          "loc": "9:26-56"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map"
    },
    {
      "id": 49,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/from.js",
      "name": "./~/rxjs/observable/from.js",
      "index": 56,
      "index2": 64,
      "size": 153,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 11,
        "building": 48
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "rxjs/observable/from",
          "loc": "12:12-43"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar FromObservable_1 = require('./FromObservable');\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map"
    },
    {
      "id": 50,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/interval.js",
      "name": "./~/rxjs/observable/interval.js",
      "index": 18,
      "index2": 23,
      "size": 177,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
      "issuerId": 24,
      "issuerName": "./~/rxjs/add/observable/interval.js",
      "profile": {
        "factory": 44,
        "building": 36
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/observable/interval.js",
          "module": "./~/rxjs/add/observable/interval.js",
          "moduleName": "./~/rxjs/add/observable/interval.js",
          "type": "cjs require",
          "userRequest": "../../observable/interval",
          "loc": "3:17-53"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map"
    },
    {
      "id": 51,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/filter.js",
      "name": "./~/rxjs/operator/filter.js",
      "index": 69,
      "index2": 66,
      "size": 3575,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
      "issuerId": 32,
      "issuerName": "./~/redux-observable/lib/ActionsObservable.js",
      "profile": {
        "factory": 51,
        "building": 47,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 32,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/ActionsObservable.js",
          "module": "./~/redux-observable/lib/ActionsObservable.js",
          "moduleName": "./~/redux-observable/lib/ActionsObservable.js",
          "type": "cjs require",
          "userRequest": "rxjs/operator/filter",
          "loc": "12:14-45"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map"
    },
    {
      "id": 52,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mapTo.js",
      "name": "./~/rxjs/operator/mapTo.js",
      "index": 34,
      "index2": 32,
      "size": 2187,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
      "issuerId": 25,
      "issuerName": "./~/rxjs/add/operator/mapTo.js",
      "profile": {
        "factory": 31,
        "building": 50,
        "dependencies": 18
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 25,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mapTo.js",
          "module": "./~/rxjs/add/operator/mapTo.js",
          "moduleName": "./~/rxjs/add/operator/mapTo.js",
          "type": "cjs require",
          "userRequest": "../../operator/mapTo",
          "loc": "3:14-45"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map"
    },
    {
      "id": 53,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/mergeMap.js",
      "name": "./~/rxjs/operator/mergeMap.js",
      "index": 27,
      "index2": 30,
      "size": 6375,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
      "issuerId": 26,
      "issuerName": "./~/rxjs/add/operator/mergeMap.js",
      "profile": {
        "factory": 33,
        "building": 49
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 26,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/mergeMap.js",
          "module": "./~/rxjs/add/operator/mergeMap.js",
          "moduleName": "./~/rxjs/add/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../../operator/mergeMap",
          "loc": "3:17-51"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map"
    },
    {
      "id": 54,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/observeOn.js",
      "name": "./~/rxjs/operator/observeOn.js",
      "index": 65,
      "index2": 62,
      "size": 2837,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 45,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "profile": {
        "factory": 25,
        "building": 26,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../operator/observeOn",
          "loc": "15:18-50"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map"
    },
    {
      "id": 55,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/switchMap.js",
      "name": "./~/rxjs/operator/switchMap.js",
      "index": 67,
      "index2": 65,
      "size": 5837,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
      "issuerId": 22,
      "issuerName": "./~/redux-observable/lib/createEpicMiddleware.js",
      "profile": {
        "factory": 27,
        "building": 63,
        "dependencies": 29
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux-observable/lib/createEpicMiddleware.js",
          "module": "./~/redux-observable/lib/createEpicMiddleware.js",
          "moduleName": "./~/redux-observable/lib/createEpicMiddleware.js",
          "type": "cjs require",
          "userRequest": "rxjs/operator/switchMap",
          "loc": "14:17-51"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map"
    },
    {
      "id": 56,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/operator/takeUntil.js",
      "name": "./~/rxjs/operator/takeUntil.js",
      "index": 36,
      "index2": 34,
      "size": 2889,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
      "issuerId": 27,
      "issuerName": "./~/rxjs/add/operator/takeUntil.js",
      "profile": {
        "factory": 30,
        "building": 53,
        "dependencies": 40
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 27,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/add/operator/takeUntil.js",
          "module": "./~/rxjs/add/operator/takeUntil.js",
          "moduleName": "./~/rxjs/add/operator/takeUntil.js",
          "type": "cjs require",
          "userRequest": "../../operator/takeUntil",
          "loc": "3:18-53"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map"
    },
    {
      "id": 57,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/Action.js",
      "name": "./~/rxjs/scheduler/Action.js",
      "index": 23,
      "index2": 17,
      "size": 1638,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
      "issuerId": 58,
      "issuerName": "./~/rxjs/scheduler/AsyncAction.js",
      "profile": {
        "factory": 4,
        "building": 2,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 58,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
          "module": "./~/rxjs/scheduler/AsyncAction.js",
          "moduleName": "./~/rxjs/scheduler/AsyncAction.js",
          "type": "cjs require",
          "userRequest": "./Action",
          "loc": "8:15-34"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map"
    },
    {
      "id": 58,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncAction.js",
      "name": "./~/rxjs/scheduler/AsyncAction.js",
      "index": 22,
      "index2": 18,
      "size": 5626,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
      "issuerId": 60,
      "issuerName": "./~/rxjs/scheduler/async.js",
      "profile": {
        "factory": 5,
        "building": 11,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 60,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
          "module": "./~/rxjs/scheduler/async.js",
          "moduleName": "./~/rxjs/scheduler/async.js",
          "type": "cjs require",
          "userRequest": "./AsyncAction",
          "loc": "2:20-44"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map"
    },
    {
      "id": 59,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/AsyncScheduler.js",
      "name": "./~/rxjs/scheduler/AsyncScheduler.js",
      "index": 24,
      "index2": 20,
      "size": 1713,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
      "issuerId": 60,
      "issuerName": "./~/rxjs/scheduler/async.js",
      "profile": {
        "factory": 5,
        "building": 8
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 60,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
          "module": "./~/rxjs/scheduler/async.js",
          "moduleName": "./~/rxjs/scheduler/async.js",
          "type": "cjs require",
          "userRequest": "./AsyncScheduler",
          "loc": "3:23-50"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map"
    },
    {
      "id": 60,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/scheduler/async.js",
      "name": "./~/rxjs/scheduler/async.js",
      "index": 21,
      "index2": 21,
      "size": 225,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
      "issuerId": 46,
      "issuerName": "./~/rxjs/observable/IntervalObservable.js",
      "profile": {
        "factory": 13,
        "building": 28
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "module": "./~/rxjs/observable/IntervalObservable.js",
          "moduleName": "./~/rxjs/observable/IntervalObservable.js",
          "type": "cjs require",
          "userRequest": "../scheduler/async",
          "loc": "9:14-43"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map"
    },
    {
      "id": 61,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/UnsubscriptionError.js",
      "name": "./~/rxjs/util/UnsubscriptionError.js",
      "index": 13,
      "index2": 8,
      "size": 1068,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "issuerId": 3,
      "issuerName": "./~/rxjs/Subscription.js",
      "profile": {
        "factory": 46,
        "building": 10
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/UnsubscriptionError",
          "loc": "7:28-65"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map"
    },
    {
      "id": 62,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isNumeric.js",
      "name": "./~/rxjs/util/isNumeric.js",
      "index": 20,
      "index2": 16,
      "size": 501,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
      "issuerId": 46,
      "issuerName": "./~/rxjs/observable/IntervalObservable.js",
      "profile": {
        "factory": 12,
        "building": 27,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/IntervalObservable.js",
          "module": "./~/rxjs/observable/IntervalObservable.js",
          "moduleName": "./~/rxjs/observable/IntervalObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isNumeric",
          "loc": "7:18-46"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map"
    },
    {
      "id": 63,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isObject.js",
      "name": "./~/rxjs/util/isObject.js",
      "index": 10,
      "index2": 5,
      "size": 151,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "issuerId": 3,
      "issuerName": "./~/rxjs/Subscription.js",
      "profile": {
        "factory": 45,
        "building": 10
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isObject",
          "loc": "3:17-43"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map"
    },
    {
      "id": 64,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/isScheduler.js",
      "name": "./~/rxjs/util/isScheduler.js",
      "index": 63,
      "index2": 58,
      "size": 178,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
      "issuerId": 44,
      "issuerName": "./~/rxjs/observable/ArrayObservable.js",
      "profile": {
        "factory": 21,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isScheduler",
          "loc": "10:20-50"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map"
    },
    {
      "id": 65,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/toSubscriber.js",
      "name": "./~/rxjs/util/toSubscriber.js",
      "index": 5,
      "index2": 13,
      "size": 707,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
      "issuerId": 0,
      "issuerName": "./~/rxjs/Observable.js",
      "profile": {
        "factory": 34,
        "building": 37,
        "dependencies": 34
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./util/toSubscriber",
          "loc": "3:21-51"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map"
    },
    {
      "id": 66,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/tryCatch.js",
      "name": "./~/rxjs/util/tryCatch.js",
      "index": 11,
      "index2": 7,
      "size": 422,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
      "issuerId": 3,
      "issuerName": "./~/rxjs/Subscription.js",
      "profile": {
        "factory": 46,
        "building": 8,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/tryCatch",
          "loc": "5:17-43"
        }
      ],
      "usedExports": true,
      "source": "\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map"
    },
    {
      "id": 67,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
      "name": "./~/symbol-observable/index.js",
      "index": 44,
      "index2": 42,
      "size": 101,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
      "issuerId": 12,
      "issuerName": "./~/redux/lib/createStore.js",
      "profile": {
        "factory": 72,
        "building": 28,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 12,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/redux/lib/createStore.js",
          "module": "./~/redux/lib/createStore.js",
          "moduleName": "./~/redux/lib/createStore.js",
          "type": "cjs require",
          "userRequest": "symbol-observable",
          "loc": "11:24-52"
        }
      ],
      "usedExports": true,
      "source": "/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n"
    },
    {
      "id": 68,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/ponyfill.js",
      "name": "./~/symbol-observable/ponyfill.js",
      "index": 45,
      "index2": 41,
      "size": 350,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
      "issuerId": 67,
      "issuerName": "./~/symbol-observable/index.js",
      "profile": {
        "factory": 6,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 67,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/symbol-observable/index.js",
          "module": "./~/symbol-observable/index.js",
          "moduleName": "./~/symbol-observable/index.js",
          "type": "cjs require",
          "userRequest": "./ponyfill",
          "loc": "4:17-38"
        }
      ],
      "usedExports": true,
      "source": "'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n"
    },
    {
      "id": 69,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/webpack/buildin/module.js",
      "name": "(webpack)/buildin/module.js",
      "index": 3,
      "index2": 0,
      "size": 548,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
      "issuerId": 1,
      "issuerName": "./~/rxjs/util/root.js",
      "profile": {
        "factory": 113,
        "building": 10
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/rxjs/util/root.js",
          "module": "./~/rxjs/util/root.js",
          "moduleName": "./~/rxjs/util/root.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-44"
        }
      ],
      "usedExports": true,
      "source": "module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n"
    },
    {
      "id": 70,
      "identifier": "/Users/michael.mathews/p/redux-obervable-demo/node_modules/babel-loader/index.js!/Users/michael.mathews/p/redux-obervable-demo/src/index.js",
      "name": "./src/index.js",
      "index": 0,
      "index2": 70,
      "size": 1336,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "profile": {
        "factory": 21,
        "building": 583
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "source": "'use strict';\n\nvar _Observable = require('rxjs/Observable');\n\nrequire('rxjs/add/observable/interval');\n\nrequire('rxjs/add/operator/mergeMap');\n\nrequire('rxjs/add/operator/mapTo');\n\nrequire('rxjs/add/operator/takeUntil');\n\nvar _redux = require('redux');\n\nvar _createEpicMiddleware = require('redux-observable/lib/createEpicMiddleware');\n\nvar $ = document.querySelector.bind(document);\n\nvar tickEpic = function tickEpic(action$) {\n  return action$.ofType('START').mergeMap(function (action) {\n    return _Observable.Observable.interval(1000).mapTo({ type: 'TICK' }).takeUntil(action$.ofType('STOP'));\n  });\n};\n\nvar TimerReducer = function TimerReducer() {\n  var state = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n  var action = arguments[1];\n\n  switch (action.type) {\n    case 'TICK':\n      return state + 1;\n    default:\n      return state;\n  }\n};\n\nvar epicMiddleware = (0, _createEpicMiddleware.createEpicMiddleware)(tickEpic);\n\nvar store = (0, _redux.createStore)(TimerReducer, (0, _redux.applyMiddleware)(epicMiddleware));\n\nvar renderApp = function renderApp() {\n  $('body').innerHTML = 'Count: ' + store.getState();\n};\n\nstore.subscribe(renderApp);\n\nstore.dispatch({ type: 'START' });\n\n// setTimeout(() => store.dispatch({type: 'STOP'}), 3000);\n\n// setTimeout(() => store.dispatch({type: 'START'}), 5000);"
    }
  ],
  "filteredModules": 0,
  "children": []
}
